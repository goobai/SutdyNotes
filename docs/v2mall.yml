version: '3'
services:
  mysql:
    image: "docker.io/mysql:8.0"
    container_name: mysql01
    command:
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --explicit_defaults_for_timestamp=true
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: Goobai!1
      MYSQL_USER: mysql
      MYSQL_PASSWORD: Goobai!1
    ports:
      - "3306:3306"
    security_opt:
      - seccomp:unconfined
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/conf/my.conf:/etc/my.conf
      - ./mysql/log:/var/log
  redis:
    image: redis
    container_name: redis01
    command:
      redis-server --requirepass goobai777
    ports:
      - "6379:6379"
    volumes:
      - ./redis/data:/data
  nginx:
    restart: always
    image: nginx
    container_name: nginx
    ports:
      - "3350:80"
      - "3351:8001"
    networks: ## 定义网络
      nn: ## 加入的网络的名称
        ipv4_address: 192.168.5.102 ## ipv4的ip地址
    volumes:
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/wwwroot:/usr/share/nginx/wwwroot
  v2mall:
    build:
      context: ./v2mall
      dockerfile: Dockerfile
    depends_on:
      - mysql
      - redis
    ports:
      - "3340:5000"
    networks: ## 定义网络
      nn: ## 加入的网络的名称
        ipv4_address: 192.168.5.103 ## ipv4的ip地址
    volumes:
      - ./v2mall/log:/log
      - ./v2mall/static:/static
      - ./v2mall/Config/config.json:/app/Config/config.json
networks: ##定义网络组
  nn: ## 网络组名称
    driver: bridge ## 网络的模式
    ipam: ## 配置网络
      driver: default
      config:
        - subnet: 192.168.5.0/24 ## ip地址网络 这里宿主机一般会是该网段的 192.168.5.1,所以不要设置自网段为1
